networks:
  dev:

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./pyproject.toml:/pyproject.toml
      - ./uv.lock:/uv.lock
    environment:
      - REDIS_HOST=redis
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    depends_on:
      - redis
    command: ["uv", "run", "manage.py", "runserver", "0.0.0.0:8000"]
    networks:
      - dev

  celery:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: ["uv", "run", "celery", "-A", "core", "worker", "--loglevel=info"]
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - ./pyproject.toml:/pyproject.toml
      - ./uv.lock:/uv.lock
    environment:
      - REDIS_HOST=redis
      - PYTHONUNBUFFERED=1
    depends_on:
      - backend
      - redis
    networks:
      - dev
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dev
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dev
volumes:
  redis_data:
